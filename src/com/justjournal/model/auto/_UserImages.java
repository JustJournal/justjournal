package com.justjournal.model.auto;

import java.util.Date;
import java.util.List;

import org.apache.cayenne.CayenneDataObject;

import com.justjournal.model.UserImagesAlbumMap;

/**
 * Class _UserImages was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _UserImages extends CayenneDataObject {

    public static final String IMAGE_PROPERTY = "image";
    public static final String MIMETYPE_PROPERTY = "mimetype";
    public static final String MODIFIED_PROPERTY = "modified";
    public static final String OWNER_PROPERTY = "owner";
    public static final String TITLE_PROPERTY = "title";
    public static final String USER_IMAGES_ALBUM_MAP_ARRAY_PROPERTY = "userImagesAlbumMapArray";

    public static final String ID_PK_COLUMN = "id";

    public void setImage(byte[] image) {
        writeProperty(IMAGE_PROPERTY, image);
    }
    public byte[] getImage() {
        return (byte[])readProperty(IMAGE_PROPERTY);
    }

    public void setMimetype(String mimetype) {
        writeProperty(MIMETYPE_PROPERTY, mimetype);
    }
    public String getMimetype() {
        return (String)readProperty(MIMETYPE_PROPERTY);
    }

    public void setModified(Date modified) {
        writeProperty(MODIFIED_PROPERTY, modified);
    }
    public Date getModified() {
        return (Date)readProperty(MODIFIED_PROPERTY);
    }

    public void setOwner(Long owner) {
        writeProperty(OWNER_PROPERTY, owner);
    }
    public Long getOwner() {
        return (Long)readProperty(OWNER_PROPERTY);
    }

    public void setTitle(String title) {
        writeProperty(TITLE_PROPERTY, title);
    }
    public String getTitle() {
        return (String)readProperty(TITLE_PROPERTY);
    }

    public void addToUserImagesAlbumMapArray(UserImagesAlbumMap obj) {
        addToManyTarget(USER_IMAGES_ALBUM_MAP_ARRAY_PROPERTY, obj, true);
    }
    public void removeFromUserImagesAlbumMapArray(UserImagesAlbumMap obj) {
        removeToManyTarget(USER_IMAGES_ALBUM_MAP_ARRAY_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<UserImagesAlbumMap> getUserImagesAlbumMapArray() {
        return (List<UserImagesAlbumMap>)readProperty(USER_IMAGES_ALBUM_MAP_ARRAY_PROPERTY);
    }


}
