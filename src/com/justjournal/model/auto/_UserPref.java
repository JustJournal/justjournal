package com.justjournal.model.auto;

import java.util.List;

/** Class _UserPref was generated by Cayenne.
  * It is probably a good idea to avoid changing this class manually, 
  * since it may be overwritten next time code is regenerated. 
  * If you need to make any customizations, please use subclass. 
  */
public class _UserPref extends org.apache.cayenne.CayenneDataObject {

    public static final String ALLOW_SPIDER_PROPERTY = "allowSpider";
    public static final String JOURNAL_NAME_PROPERTY = "journalName";
    public static final String MODIFIED_PROPERTY = "modified";
    public static final String OWNER_VIEW_ONLY_PROPERTY = "ownerViewOnly";
    public static final String SHOW_AVATAR_PROPERTY = "showAvatar";
    public static final String STYLE_PROPERTY = "style";
    public static final String USER_PREF_TO_USER_PROPERTY = "userPrefToUser";

    public static final String ID_PK_COLUMN = "id";

    public void setAllowSpider(String allowSpider) {
        writeProperty("allowSpider", allowSpider);
    }
    public String getAllowSpider() {
        return (String)readProperty("allowSpider");
    }
    
    
    public void setJournalName(String journalName) {
        writeProperty("journalName", journalName);
    }
    public String getJournalName() {
        return (String)readProperty("journalName");
    }
    
    
    public void setModified(java.util.Date modified) {
        writeProperty("modified", modified);
    }
    public java.util.Date getModified() {
        return (java.util.Date)readProperty("modified");
    }
    
    
    public void setOwnerViewOnly(String ownerViewOnly) {
        writeProperty("ownerViewOnly", ownerViewOnly);
    }
    public String getOwnerViewOnly() {
        return (String)readProperty("ownerViewOnly");
    }
    
    
    public void setShowAvatar(String showAvatar) {
        writeProperty("showAvatar", showAvatar);
    }
    public String getShowAvatar() {
        return (String)readProperty("showAvatar");
    }
    
    
    public void setStyle(Byte style) {
        writeProperty("style", style);
    }
    public Byte getStyle() {
        return (Byte)readProperty("style");
    }
    
    
    public void addToUserPrefToUser(com.justjournal.model.User obj) {
        addToManyTarget("userPrefToUser", obj, true);
    }
    public void removeFromUserPrefToUser(com.justjournal.model.User obj) {
        removeToManyTarget("userPrefToUser", obj, true);
    }
    public List getUserPrefToUser() {
        return (List)readProperty("userPrefToUser");
    }
    
    
}
