package com.justjournal.model.auto;

import java.util.Date;
import java.util.List;

import org.apache.cayenne.CayenneDataObject;

import com.justjournal.model.Comments;
import com.justjournal.model.Entry;
import com.justjournal.model.Favorites;
import com.justjournal.model.Friends;
import com.justjournal.model.UserBio;
import com.justjournal.model.UserContact;
import com.justjournal.model.UserFiles;
import com.justjournal.model.UserImages;
import com.justjournal.model.UserLink;
import com.justjournal.model.UserLocation;
import com.justjournal.model.UserPic;
import com.justjournal.model.UserPref;
import com.justjournal.model.UserStyle;

/**
 * Class _User was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _User extends CayenneDataObject {

    public static final String LASTLOGIN_PROPERTY = "lastlogin";
    public static final String LASTNAME_PROPERTY = "lastname";
    public static final String MODIFIED_PROPERTY = "modified";
    public static final String NAME_PROPERTY = "name";
    public static final String PASSWORD_PROPERTY = "password";
    public static final String SINCE_PROPERTY = "since";
    public static final String TYPE_PROPERTY = "type";
    public static final String USERNAME_PROPERTY = "username";
    public static final String FRIEND_USER_TO_FRIENDS_PROPERTY = "friendUserToFriends";
    public static final String USER_TO_COMMENT_PROPERTY = "userToComment";
    public static final String USER_TO_ENTRY_PROPERTY = "userToEntry";
    public static final String USER_TO_FAVORITES_PROPERTY = "userToFavorites";
    public static final String USER_TO_FRIENDS_PROPERTY = "userToFriends";
    public static final String USER_TO_USER_BIO_PROPERTY = "userToUserBio";
    public static final String USER_TO_USER_CONTACT_PROPERTY = "userToUserContact";
    public static final String USER_TO_USER_FILES_PROPERTY = "userToUserFiles";
    public static final String USER_TO_USER_IMAGES_PROPERTY = "userToUserImages";
    public static final String USER_TO_USER_LINK_PROPERTY = "userToUserLink";
    public static final String USER_TO_USER_LOCATION_PROPERTY = "userToUserLocation";
    public static final String USER_TO_USER_PIC_PROPERTY = "userToUserPic";
    public static final String USER_TO_USER_PREF_PROPERTY = "userToUserPref";
    public static final String USER_TO_USER_STYLE_PROPERTY = "userToUserStyle";

    public static final String ID_PK_COLUMN = "id";

    public void setLastlogin(Date lastlogin) {
        writeProperty(LASTLOGIN_PROPERTY, lastlogin);
    }
    public Date getLastlogin() {
        return (Date)readProperty(LASTLOGIN_PROPERTY);
    }

    public void setLastname(String lastname) {
        writeProperty(LASTNAME_PROPERTY, lastname);
    }
    public String getLastname() {
        return (String)readProperty(LASTNAME_PROPERTY);
    }

    public void setModified(Date modified) {
        writeProperty(MODIFIED_PROPERTY, modified);
    }
    public Date getModified() {
        return (Date)readProperty(MODIFIED_PROPERTY);
    }

    public void setName(String name) {
        writeProperty(NAME_PROPERTY, name);
    }
    public String getName() {
        return (String)readProperty(NAME_PROPERTY);
    }

    public void setPassword(String password) {
        writeProperty(PASSWORD_PROPERTY, password);
    }
    public String getPassword() {
        return (String)readProperty(PASSWORD_PROPERTY);
    }

    public void setSince(Short since) {
        writeProperty(SINCE_PROPERTY, since);
    }
    public Short getSince() {
        return (Short)readProperty(SINCE_PROPERTY);
    }

    public void setType(Byte type) {
        writeProperty(TYPE_PROPERTY, type);
    }
    public Byte getType() {
        return (Byte)readProperty(TYPE_PROPERTY);
    }

    public void setUsername(String username) {
        writeProperty(USERNAME_PROPERTY, username);
    }
    public String getUsername() {
        return (String)readProperty(USERNAME_PROPERTY);
    }

    public void addToFriendUserToFriends(Friends obj) {
        addToManyTarget(FRIEND_USER_TO_FRIENDS_PROPERTY, obj, true);
    }
    public void removeFromFriendUserToFriends(Friends obj) {
        removeToManyTarget(FRIEND_USER_TO_FRIENDS_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Friends> getFriendUserToFriends() {
        return (List<Friends>)readProperty(FRIEND_USER_TO_FRIENDS_PROPERTY);
    }


    public void addToUserToComment(Comments obj) {
        addToManyTarget(USER_TO_COMMENT_PROPERTY, obj, true);
    }
    public void removeFromUserToComment(Comments obj) {
        removeToManyTarget(USER_TO_COMMENT_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Comments> getUserToComment() {
        return (List<Comments>)readProperty(USER_TO_COMMENT_PROPERTY);
    }


    public void addToUserToEntry(Entry obj) {
        addToManyTarget(USER_TO_ENTRY_PROPERTY, obj, true);
    }
    public void removeFromUserToEntry(Entry obj) {
        removeToManyTarget(USER_TO_ENTRY_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Entry> getUserToEntry() {
        return (List<Entry>)readProperty(USER_TO_ENTRY_PROPERTY);
    }


    public void addToUserToFavorites(Favorites obj) {
        addToManyTarget(USER_TO_FAVORITES_PROPERTY, obj, true);
    }
    public void removeFromUserToFavorites(Favorites obj) {
        removeToManyTarget(USER_TO_FAVORITES_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Favorites> getUserToFavorites() {
        return (List<Favorites>)readProperty(USER_TO_FAVORITES_PROPERTY);
    }


    public void addToUserToFriends(Friends obj) {
        addToManyTarget(USER_TO_FRIENDS_PROPERTY, obj, true);
    }
    public void removeFromUserToFriends(Friends obj) {
        removeToManyTarget(USER_TO_FRIENDS_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Friends> getUserToFriends() {
        return (List<Friends>)readProperty(USER_TO_FRIENDS_PROPERTY);
    }


    public void setUserToUserBio(UserBio userToUserBio) {
        setToOneTarget(USER_TO_USER_BIO_PROPERTY, userToUserBio, true);
    }

    public UserBio getUserToUserBio() {
        return (UserBio)readProperty(USER_TO_USER_BIO_PROPERTY);
    }


    public void setUserToUserContact(UserContact userToUserContact) {
        setToOneTarget(USER_TO_USER_CONTACT_PROPERTY, userToUserContact, true);
    }

    public UserContact getUserToUserContact() {
        return (UserContact)readProperty(USER_TO_USER_CONTACT_PROPERTY);
    }


    public void addToUserToUserFiles(UserFiles obj) {
        addToManyTarget(USER_TO_USER_FILES_PROPERTY, obj, true);
    }
    public void removeFromUserToUserFiles(UserFiles obj) {
        removeToManyTarget(USER_TO_USER_FILES_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<UserFiles> getUserToUserFiles() {
        return (List<UserFiles>)readProperty(USER_TO_USER_FILES_PROPERTY);
    }


    public void addToUserToUserImages(UserImages obj) {
        addToManyTarget(USER_TO_USER_IMAGES_PROPERTY, obj, true);
    }
    public void removeFromUserToUserImages(UserImages obj) {
        removeToManyTarget(USER_TO_USER_IMAGES_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<UserImages> getUserToUserImages() {
        return (List<UserImages>)readProperty(USER_TO_USER_IMAGES_PROPERTY);
    }


    public void setUserToUserLink(UserLink userToUserLink) {
        setToOneTarget(USER_TO_USER_LINK_PROPERTY, userToUserLink, true);
    }

    public UserLink getUserToUserLink() {
        return (UserLink)readProperty(USER_TO_USER_LINK_PROPERTY);
    }


    public void setUserToUserLocation(UserLocation userToUserLocation) {
        setToOneTarget(USER_TO_USER_LOCATION_PROPERTY, userToUserLocation, true);
    }

    public UserLocation getUserToUserLocation() {
        return (UserLocation)readProperty(USER_TO_USER_LOCATION_PROPERTY);
    }


    public void setUserToUserPic(UserPic userToUserPic) {
        setToOneTarget(USER_TO_USER_PIC_PROPERTY, userToUserPic, true);
    }

    public UserPic getUserToUserPic() {
        return (UserPic)readProperty(USER_TO_USER_PIC_PROPERTY);
    }


    public void setUserToUserPref(UserPref userToUserPref) {
        setToOneTarget(USER_TO_USER_PREF_PROPERTY, userToUserPref, true);
    }

    public UserPref getUserToUserPref() {
        return (UserPref)readProperty(USER_TO_USER_PREF_PROPERTY);
    }


    public void setUserToUserStyle(UserStyle userToUserStyle) {
        setToOneTarget(USER_TO_USER_STYLE_PROPERTY, userToUserStyle, true);
    }

    public UserStyle getUserToUserStyle() {
        return (UserStyle)readProperty(USER_TO_USER_STYLE_PROPERTY);
    }


}
