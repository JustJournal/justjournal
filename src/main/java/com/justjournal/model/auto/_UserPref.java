package com.justjournal.model.auto;

import java.util.Date;
import java.util.List;

import org.apache.cayenne.CayenneDataObject;

import com.justjournal.model.User;

/**
 * Class _UserPref was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _UserPref extends CayenneDataObject {

    public static final String ALLOW_SPIDER_PROPERTY = "allowSpider";
    public static final String JOURNAL_NAME_PROPERTY = "journalName";
    public static final String MODIFIED_PROPERTY = "modified";
    public static final String OWNER_VIEW_ONLY_PROPERTY = "ownerViewOnly";
    public static final String SHOW_AVATAR_PROPERTY = "showAvatar";
    public static final String STYLE_PROPERTY = "style";
    public static final String USER_PREF_TO_USER_PROPERTY = "userPrefToUser";

    public static final String ID_PK_COLUMN = "id";

    public void setAllowSpider(String allowSpider) {
        writeProperty(ALLOW_SPIDER_PROPERTY, allowSpider);
    }
    public String getAllowSpider() {
        return (String)readProperty(ALLOW_SPIDER_PROPERTY);
    }

    public void setJournalName(String journalName) {
        writeProperty(JOURNAL_NAME_PROPERTY, journalName);
    }
    public String getJournalName() {
        return (String)readProperty(JOURNAL_NAME_PROPERTY);
    }

    public void setModified(Date modified) {
        writeProperty(MODIFIED_PROPERTY, modified);
    }
    public Date getModified() {
        return (Date)readProperty(MODIFIED_PROPERTY);
    }

    public void setOwnerViewOnly(String ownerViewOnly) {
        writeProperty(OWNER_VIEW_ONLY_PROPERTY, ownerViewOnly);
    }
    public String getOwnerViewOnly() {
        return (String)readProperty(OWNER_VIEW_ONLY_PROPERTY);
    }

    public void setShowAvatar(String showAvatar) {
        writeProperty(SHOW_AVATAR_PROPERTY, showAvatar);
    }
    public String getShowAvatar() {
        return (String)readProperty(SHOW_AVATAR_PROPERTY);
    }

    public void setStyle(Byte style) {
        writeProperty(STYLE_PROPERTY, style);
    }
    public Byte getStyle() {
        return (Byte)readProperty(STYLE_PROPERTY);
    }

    public void addToUserPrefToUser(User obj) {
        addToManyTarget(USER_PREF_TO_USER_PROPERTY, obj, true);
    }
    public void removeFromUserPrefToUser(User obj) {
        removeToManyTarget(USER_PREF_TO_USER_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<User> getUserPrefToUser() {
        return (List<User>)readProperty(USER_PREF_TO_USER_PROPERTY);
    }


}
